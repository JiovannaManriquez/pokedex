// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      nativeID="animatedComponent"
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={true}
        hideBackButton={false}
        hideShadow={false}
        largeTitleHideShadow={false}
        title="Home"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            undefined,
          ]
        }
      >
        <RNCSafeAreaView
          style={
            Object {
              "backgroundColor": "white",
              "flex": 1,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "height": 60,
                "justifyContent": "space-between",
                "paddingHorizontal": 20,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "fontFamily": "Poppins-Bold",
                    "fontSize": 24,
                    "textTransform": "capitalize",
                  },
                  Object {
                    "color": "#2D3748",
                  },
                ]
              }
            >
              Pokedex
            </Text>
          </View>
          <View
            style={
              Object {
                "marginBottom": 10,
                "marginHorizontal": 10,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "flexDirection": "row",
                  "overflow": "hidden",
                  "paddingBottom": 13,
                  "paddingTop": 13,
                }
              }
            >
              <View
                style={
                  Object {
                    "paddingHorizontal": 0,
                    "width": "100%",
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#dcdce1",
                      "borderBottomWidth": 0,
                      "borderColor": "#86939e",
                      "borderRadius": 9,
                      "flexDirection": "row",
                      "marginLeft": 8,
                      "marginRight": 8,
                      "minHeight": 36,
                      "transform": Array [
                        Object {
                          "translateX": 0,
                        },
                      ],
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "height": 40,
                        "justifyContent": "center",
                        "marginLeft": 8,
                        "marginVertical": 4,
                        "paddingRight": 4,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "transparent",
                              "justifyContent": "center",
                            }
                          }
                        >
                          <Text
                            allowFontScaling={false}
                            style={
                              Array [
                                Object {
                                  "color": "#7d7d7d",
                                  "fontSize": 20,
                                },
                                Object {
                                  "backgroundColor": "transparent",
                                },
                                Object {
                                  "fontFamily": "Ionicons",
                                  "fontStyle": "normal",
                                  "fontWeight": "normal",
                                },
                                Object {},
                              ]
                            }
                            testID="iconIcon"
                          >
                            ï”…
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <TextInput
                    editable={true}
                    onBlur={[Function]}
                    onCancel={[Function]}
                    onChangeText={[Function]}
                    onFocus={[Function]}
                    placeholder="Type Here..."
                    placeholderTextColor="#7d7d7d"
                    platform="ios"
                    style={
                      Object {
                        "color": "#242424",
                        "flex": 1,
                        "fontSize": 18,
                        "marginLeft": 6,
                        "minHeight": 40,
                        "overflow": "hidden",
                      }
                    }
                    testID="searchInput"
                    underlineColorAndroid="transparent"
                    value=""
                  />
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "height": 40,
                        "justifyContent": "center",
                        "marginRight": 8,
                        "marginVertical": 4,
                        "paddingRight": 4,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexDirection": "row",
                        }
                      }
                    />
                  </View>
                </View>
                <Text
                  style={
                    Object {
                      "color": "#ff190c",
                      "fontSize": 12,
                      "height": 0,
                      "margin": 0,
                      "padding": 0,
                    }
                  }
                />
              </View>
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "opacity": 0,
                    "position": "absolute",
                    "right": null,
                  }
                }
              >
                <View
                  accessibilityRole="button"
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  nativeID="animatedComponent"
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "#007aff",
                            "fontSize": 18,
                            "padding": 8,
                            "textAlign": "center",
                          },
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      Cancel
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <RCTScrollView
            bounces={true}
            collapsable={false}
            contentContainerStyle={
              Object {
                "paddingHorizontal": 20,
              }
            }
            data={Array []}
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            nativeID="animatedComponent"
            onContentSizeChange={[Function]}
            onEndReached={[Function]}
            onEndReachedThreshold={0.8}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={0.0001}
            showsVerticalScrollIndicator={true}
            stickyHeaderIndices={Array []}
            style={Object {}}
            viewabilityConfigCallbackPairs={Array []}
          >
            <View />
          </RCTScrollView>
        </RNCSafeAreaView>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
